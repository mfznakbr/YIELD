# name: CI/CD MLflow Tebu

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# env:
#   CSV_URL: "CI/data_train.xlxs"
#   TARGET_VAR: "Ton"


# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE
#       - uses: actions/checkout@v3

#       # Setup Python 3.12.7
#       - name: Set up Python 3.12.7
#         uses: actions/setup-python@v4
#         with:
#           python-version: "3.12.7"
      
#       # Check Env Variables
#       - name: Check Env
#         run: |
#           echo $CSV_URL
#       # Install mlflow
#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install mlflow openpyxl
#       # In your GitHub Actions workflow
#         steps:
#           - name: Initialize MLflow database
#             run: |
#               mlflow db upgrade sqlite:///mlflow.db
#               touch mlflow.db  # Ensure file exists
      
#   - name: Run training
#     run: mlflow run CI --env-manager=local
#       # Run as a mlflow project
#       - name: Run mlflow project
#         run: |
#           mlflow run CI --env-manager=local 
      
#       # Get latest run_id
#       - name: Get latest MLflow run_id
#         run: |
#           RUN_ID=$(ls -td mlruns/0/*/ | head -n 1 | cut -d'/' -f3)
#           echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
#           echo "Latest run_id: $RUN_ID"
          
#       # Build Docker Model
#       - name: Build Docker Model
#         run: |
#           mlflow models build-docker --model-uri "runs:/$RUN_ID/model" --name "sugarcane" 

#       # Login to Docker Hub
#       - name: Log in to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_HUB_USERNAME }}
#           password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

#       # Tag the Docker image
#       - name: Tag Docker Image
#         run: |
#           docker tag cc ${{ secrets.DOCKER_HUB_USERNAME }}/sugarcane:latest

#       # Push Docker image to Docker Hub
#       - name: Push Docker Image
#         run: |
#           docker push ${{ secrets.DOCKER_HUB_USERNAME }}/sugarcane:latest
name: CI/CD MLflow Tebu

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CSV_URL: "CI/data_train.xlsx"  # Fixed typo in extension (.xlxs -> .xlsx)
  TARGET_VAR: "Ton"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository
      - uses: actions/checkout@v3

      # Setup Python
      - name: Set up Python 3.12.7
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.7"
      
      # Check Environment Variables
      - name: Check Env
        run: |
          echo "CSV_URL: $CSV_URL"
          echo "TARGET_VAR: $TARGET_VAR"
      
      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mlflow scikit-learn openpyxl pandas numpy joblib
      
      # Initialize MLflow database
      - name: Initialize MLflow database
        run: |
          mlflow db upgrade sqlite:///mlflow.db
          touch mlflow.db
          ls -la
      
      # Run training
      - name: Run training
        run: |
          cd CI
          mlflow run . --env-manager=local
      
      # Get latest run_id
      - name: Get latest MLflow run_id
        id: get-run-id
        run: |
          RUN_ID=$(ls -td mlruns/0/*/ | head -n 1 | cut -d'/' -f3)
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
          echo "::set-output name=run_id::$RUN_ID"
          echo "Latest run_id: $RUN_ID"
      
      # Build Docker Model
      - name: Build Docker Model
        run: |
          mlflow models build-docker --model-uri "runs:/${{ env.RUN_ID }}/model" --name "sugarcane"
      
      # Login to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      # Tag and push Docker image
      - name: Tag and Push Docker Image
        run: |
          docker tag sugarcane ${{ secrets.DOCKER_HUB_USERNAME }}/sugarcane:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/sugarcane:latest
